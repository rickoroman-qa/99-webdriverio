"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.createAxios = createAxios;
const core_1 = require("@serenity-js/core");
const axios_1 = __importStar(require("axios"));
const axiosProxyOverridesFor_1 = require("./axiosProxyOverridesFor");
/**
 * Creates an Axios instance with desired configuration and proxy support.
 *
 * @param axiosInstanceOrConfig
 */
function createAxios(axiosInstanceOrConfig = {}) {
    const axiosInstanceGiven = isAxiosInstance(axiosInstanceOrConfig);
    const axiosInstance = axiosInstanceGiven
        ? axiosInstanceOrConfig
        : axios_1.default.create({
            timeout: core_1.Duration.ofSeconds(10).inMilliseconds(),
            ...omit(axiosInstanceOrConfig, 'proxy'),
        });
    const proxyConfig = axiosInstanceGiven
        ? axiosInstanceOrConfig.defaults.proxy
        : axiosInstanceOrConfig.proxy;
    const proxyOverrides = (0, axiosProxyOverridesFor_1.axiosProxyOverridesFor)({
        ...axiosInstance.defaults,
        proxy: proxyConfig || undefined,
    });
    return withOverrides(axiosInstance, proxyOverrides);
}
function isAxiosInstance(axiosInstanceOrConfig) {
    return axiosInstanceOrConfig
        && (axiosInstanceOrConfig instanceof axios_1.Axios || axiosInstanceOrConfig.defaults);
}
function withOverrides(axiosInstance, overrides) {
    for (const [key, override] of Object.entries(overrides)) {
        axiosInstance.defaults[key] = override;
    }
    return axiosInstance;
}
function omit(record, key) {
    const { [key]: omitted_, ...rest } = record;
    return rest;
}
//# sourceMappingURL=createAxios.js.map